{"version":3,"sources":["Components/Filter/Filter.module.scss","Components/ElemListContact/ElemListContact.module.scss","Components/Form/Form.module.scss","Components/Form/Form.jsx","Components/ElemListContact/ElemListContact.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","App.module.scss","Components/ContactList/ContainerList.module.scss"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAddContacts","resetForm","this","onSubmit","className","style","label","input","type","pattern","onChange","title","required","button","Component","ElemListContact","id","func","onClick","ContactList","contacts","onDeleteContact","list","map","item","Filter","App","filter","deleteContacts","prevState","contact","handleFilter","addContacts","findReturnName","find","alert","nanoid","console","log","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parseContact","JSON","parse","prevProps","setItem","stringify","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67e95ef6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2e2xw\",\"label\":\"Filter_label__2VWT5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ElemListContact_button__3fS_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__377gr\",\"input\":\"Form_input__3ldTc\",\"button\":\"Form_button__24lHY\"};","import { Component } from 'react';\r\nimport style from './Form.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Form extends Component {\r\n  static propTypes = {\r\n    onAddContacts: PropTypes.func.isRequired,\r\n  };\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContacts({ name, number });\r\n    this.resetForm();\r\n  };\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label className={style.label}>Name</label>\r\n          <input\r\n            className={style.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n\r\n          <label className={style.label}>Tel</label>\r\n          <input\r\n            className={style.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n\r\n          <button className={style.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport style from './ElemListContact.module.scss';\r\n\r\nexport const ElemListContact = ({ name, number, id, func }) => (\r\n  <>\r\n    <i>{name}:</i>\r\n    <b>{number}</b>\r\n\r\n    <button className={style.button} onClick={() => func(id)}>\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\nElemListContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  func: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { ElemListContact } from '../ElemListContact';\r\nimport style from './ContainerList.module.scss';\r\nexport const ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        <ElemListContact\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          func={onDeleteContact}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport style from './Filter.module.scss';\r\n\r\nexport const Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={style.label}>Find contacts by name</label>\r\n    <input\r\n      className={style.input}\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </>\r\n);\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { Form } from './Components/Form';\nimport { nanoid } from 'nanoid';\nimport { ContactList } from './Components/ContactList';\nimport { Filter } from './Components/Filter';\nimport style from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parseContact = JSON.parse(contact);\n    console.log(parseContact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContacts = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  handleFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  addContacts = ({ name, number }) => {\n    const { contacts } = this.state;\n    const findReturnName = contacts.find(contact => contact.name === name);\n\n    if (findReturnName) {\n      alert('This name is already in the phone book ');\n    } else {\n      const contact = {\n        id: nanoid(),\n        name,\n        number,\n      };\n      console.log(contact);\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    }\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={style.container}>\n        <h1 className={style.title}>Phonebook</h1>\n        <Form onAddContacts={this.addContacts} />\n\n        <h2 className={style.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.handleFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__3XIta\",\"container\":\"App_container__2L52E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContainerList_list__2jIna\",\"item\":\"ContainerList_item__1juMg\"};"],"sourceRoot":""}